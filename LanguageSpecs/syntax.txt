program = decllist stmtlist

decllist = declaration | declaration ";" decllist

declaration = "var" type identifier ";"

type = type1 | arraydecl | pairdecl

type1 = "bool" | "char" | "int" | "float"

pairdecl = "<" type1 "," type1 ">"

arraydecl = "[" positivenumber "]" "of" type1

positivenumber = nonzero-digit{digit}

nonzero-digit = "1" | "2" |...| "9"

digit = "0" | nonzero-digit

stmtlist = stmt | stmt ";" stmtlist

stmt = simplstmt | structstmt

simplstmt = assignstmt | iostmt

assignstmt = identifier "=" expression

expression = expression ("+" | "-") term | term

term = term ("*" | "/" | "%") factor | factor

factor = "(" expression ")" | identifier | constant

constant = integer | float

integer - defined in lexic.txt

float = integer "," {digit}

iostmt = ("read"|"write") "(" identifier ")"

structstmt = cmpdstmt | ifstmt | whilestmt

ifstmt = "if" "(" condition ")" "{" stmt "}" ["else" "{" stmt "}" ]

whilestmt = "while" "(" condition ")" "{" stmt "}"

condition = expression relation expression

relation = "<" | "<=" | "=" | "<>" | ">=" | ">"